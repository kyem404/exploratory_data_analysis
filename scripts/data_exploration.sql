-------------------------------------------------
-- Database Exploration
-------------------------------------------------

-- Explore All Objects in the Database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore All Columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'


  
-------------------------------------------------
-- Dimensions Exploration
-- Identifying the unique values (or categories) in each dimension.
-- Recognizing how data might be grouped or segmented, which is useful for later analysis.
-------------------------------------------------

-- Explore All Countries the customers come from
SELECT DISTINCT country FROM gold.dim_customers;

-- Explore All Categories "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3


  
-------------------------------------------------
-- Date Exploration
-- Identify the earliest and latest dates (boundaries)
-- Understand the scope of data and the timespan
-------------------------------------------------
-- Finding the boundaries of the order_date column
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date
FROM gold.fact_sales

-- How many years of sales are available
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(year, MIN(order_date), MAX(order_date)) AS order_range_years
FROM gold.fact_sales

-- How many months of sales are available
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(year, MIN(order_date), MAX(order_date)) AS order_range_years,
DATEDIFF(month, MIN(order_date), MAX(order_date)) AS order_range_months
FROM gold.fact_sales


-- Finding the youngest and the oldest customer
SELECT
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customers;



-------------------------------------------------
-- Measures Exploration
-- Calculate the key metric of the business (Big Numbers)
-- Highest Leve of Aggregation | Lowest Level of Details
-------------------------------------------------
-- Total sales
SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales;

-- Total items sold
SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales;

-- Average selling price
SELECT AVG(price) AS avg_price FROM gold.fact_sales;

-- Total number of orders
SELECT COUNT(order_number) AS total_orders FROM gold.fact_sales; -- all orders
SELECT COUNT(DISTINCT order_number) AS total_orders FROM gold.fact_sales; -- unique orders

-- Total number of products
SELECT COUNT(DISTINCT product_key) AS total_orders FROM gold.dim_products;

-- Total number of customers
SELECT COUNT(customer_key) AS total_customers FROM gold.dim_customers;

-- Total number of customers that have placed an order
SELECT COUNT(DISTINCT customer_key) AS total_customers FROM gold.fact_sales;

-- Generating a general report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' AS measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS measure_name, AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Number of Orders' AS measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Number of Products' AS measure_name, COUNT(DISTINCT product_key) AS measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total Number of Customers' AS measure_name, COUNT(customer_key) AS measure_value FROM gold.dim_customers;



-------------------------------------------------
-- Magnitute Analysis
-- Compare the measure values by categories
-- Aids the understanding of importance of different categories
-------------------------------------------------

-- Total customers by countries
SELECT
country,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Total customers by gender
SELECT
gender,
COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Total products by category
SELECT
category,
COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- Average cost in each category
SELECT
category,
AVG(cost) AS average_costs
FROM gold.dim_products
GROUP BY category
ORDER BY average_costs DESC;

-- Total revenue generated for each category
SELECT
SUM(f.sales_amount) total_revenue,
p.category
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- Total revenue generated by each customer
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON c.customer_key = f.customer_key
GROUP BY 
c.customer_key, 
c.first_name, 
c.last_name
ORDER BY total_revenue DESC;

-- Distribution of items sold across countries
SELECT
c.country,
SUM(f.quantity) total_sold_items
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON c.customer_key = f.customer_key
GROUP BY 
c.country
ORDER BY total_sold_items DESC;



-------------------------------------------------
-- Ranking Analysis
-- Order the values of dimensions by measure
-- Top N performers | Bottom N Performers
-------------------------------------------------

